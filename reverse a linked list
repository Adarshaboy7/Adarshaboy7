
#include <stdio.h>
#include <stdlib.h>
// Node structure for a linked list
struct Node {
int data;
struct Node* next;
};
// Function to create a new node with given data
struct Node* createNode(int data) {
struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
newNode->data = data;
newNode->next = NULL;
return newNode;
}
// Function to reverse a linked list
struct Node* reverseList(struct Node* head) {
struct Node* prev = NULL;
struct Node* current = head;
struct Node* nextNode = NULL;
while (current != NULL) {
nextNode = current->next;
current->next = prev;
prev = current;
current = nextNode;
}
return prev; // new head of the reversed list
}
// Function to print a linked list
void printList(struct Node* head) {
while (head != NULL) {
printf("%d ", head->data);
head = head->next;
}
printf("\n");
}
// Driver program to test the reverseList function
int main() {
// Create a linked list
struct Node* head = createNode(1);
head->next = createNode(2);
head->next->next = createNode(3);

head->next->next->next = createNode(4);
head->next->next->next->next = createNode(5);
// Print the original list
printf("Original List: ");
printList(head);
// Reverse the list
head = reverseList(head);
// Print the reversed list
printf("Reversed List: ");
printList(head);
// Free allocated memory
while (head != NULL) {
struct Node* temp = head;
head = head->next;
free(temp);
}
return 0;
}
